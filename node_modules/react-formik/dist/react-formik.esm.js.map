{"version":3,"file":"react-formik.esm.js","sources":["../src/index.tsx"],"sourcesContent":["// @ts-nocheck\nimport React from \"react\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { Formik as BaseFormik, useFormikContext, FormikProps, FormikConfig } from \"formik\";\n\nconst FormikContext = createContext();\n\nexport function FormikProvider({ children }) {\n  const [states, setStates] = useState({});\n\n  return (\n    <FormikContext.Provider value={{states, setStates}}>\n      {children}\n    </FormikContext.Provider>\n  )\n}\n\ntype UseFormikProps = { formikKey?: string };\n\nexport function useFormik(props: UseFormikProps): FormikProps<any> {\n\n  if(!props) return useFormikContext();\n\n  const { formikKey } = props;\n  \n  const context =  useContext(FormikContext);\n\n  if(typeof context === \"undefined\") return undefined;\n\n  const { states, setStates } = context;\n\n  const state =  states[formikKey] || {};\n\n  return {\n    ...state,\n    setState: (state)=> {\n      setStates((prevStates)=> ({\n        ...prevStates, [formikKey]: {...prevStates[formikKey], ...state}\n      }))\n    }\n  }\n}\n\ntype FormikConfigProps = { formikKey: string } & FormikConfig<any>;\n\nexport function Formik({ formikKey, children, ...props }: FormikConfigProps) {\n  const { setState } = useFormik({ formikKey });\n\n  return (\n    <BaseFormik key={formikKey} {...props}>\n      {(state)=> {\n\n        useEffect(()=> { \n          setState(state); \n        }, [\n          state.dirty,\n          state.errors,\n          state.isSubmitting,\n          state.isValid,\n          state.isValidating,\n          state.status,\n          state.touched,\n          state.values,\n          state.enableReinitialize,\n          state.isInitialValid,\n          state.initialErrors,\n          state.initialStatus,\n          state.initialTouched,\n          state.initialValues,\n        ]);\n\n        if(typeof children === \"function\") {\n          return children(state);\n        }\n\n        return children;\n      }}\n    </BaseFormik>\n  )\n}\n"],"names":["FormikContext","createContext","FormikProvider","children","useState","states","setStates","React","Provider","value","useFormik","props","useFormikContext","formikKey","context","useContext","undefined","state","setState","prevStates","Formik","BaseFormik","key","useEffect","dirty","errors","isSubmitting","isValid","isValidating","status","touched","values","enableReinitialize","isInitialValid","initialErrors","initialStatus","initialTouched","initialValues"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,aAAa,gBAAGC,aAAa,EAAE;SAErBC,cAAc;MAAGC,QAAQ,QAARA,QAAQ;EACvC,gBAA4BC,QAAQ,CAAC,EAAE,CAAC;IAAjCC,MAAM;IAAEC,SAAS;EAExB,OACEC,oBAACP,aAAa,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAACJ,MAAM,EAANA,MAAM;MAAEC,SAAS,EAATA;;KACrCH,QAAQ,CACc;AAE7B;SAIgBO,SAAS,CAACC,KAAqB;EAE7C,IAAG,CAACA,KAAK,EAAE,OAAOC,gBAAgB,EAAE;EAEpC,IAAQC,SAAS,GAAKF,KAAK,CAAnBE,SAAS;EAEjB,IAAMC,OAAO,GAAIC,UAAU,CAACf,aAAa,CAAC;EAE1C,IAAG,OAAOc,OAAO,KAAK,WAAW,EAAE,OAAOE,SAAS;EAEnD,IAAQX,MAAM,GAAgBS,OAAO,CAA7BT,MAAM;IAAEC,SAAS,GAAKQ,OAAO,CAArBR,SAAS;EAEzB,IAAMW,KAAK,GAAIZ,MAAM,CAACQ,SAAS,CAAC,IAAI,EAAE;EAEtC,oBACKI,KAAK;IACRC,QAAQ,EAAE,kBAACD,KAAK;MACdX,SAAS,CAAC,UAACa,UAAU;QAAA;QAAA,oBAChBA,UAAU,6BAAGN,SAAS,iBAAOM,UAAU,CAACN,SAAS,CAAC,EAAKI,KAAK;OAC/D,CAAC;;;AAGT;SAIgBG,MAAM;MAAGP,SAAS,SAATA,SAAS;IAAEV,QAAQ,SAARA,QAAQ;IAAKQ,KAAK;EACpD,iBAAqBD,SAAS,CAAC;MAAEG,SAAS,EAATA;KAAW,CAAC;IAArCK,QAAQ,cAARA,QAAQ;EAEhB,OACEX,oBAACc,QAAU;IAACC,GAAG,EAAET;KAAeF,KAAK,GAClC,UAACM,KAAK;IAELM,SAAS,CAAC;MACRL,QAAQ,CAACD,KAAK,CAAC;KAChB,EAAE,CACDA,KAAK,CAACO,KAAK,EACXP,KAAK,CAACQ,MAAM,EACZR,KAAK,CAACS,YAAY,EAClBT,KAAK,CAACU,OAAO,EACbV,KAAK,CAACW,YAAY,EAClBX,KAAK,CAACY,MAAM,EACZZ,KAAK,CAACa,OAAO,EACbb,KAAK,CAACc,MAAM,EACZd,KAAK,CAACe,kBAAkB,EACxBf,KAAK,CAACgB,cAAc,EACpBhB,KAAK,CAACiB,aAAa,EACnBjB,KAAK,CAACkB,aAAa,EACnBlB,KAAK,CAACmB,cAAc,EACpBnB,KAAK,CAACoB,aAAa,CACpB,CAAC;IAEF,IAAG,OAAOlC,QAAQ,KAAK,UAAU,EAAE;MACjC,OAAOA,QAAQ,CAACc,KAAK,CAAC;;IAGxB,OAAOd,QAAQ;GAChB,CACU;AAEjB;;;;"}